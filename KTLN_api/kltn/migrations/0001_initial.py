# Generated by Django 5.0.3 on 2024-04-06 04:20

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avt', cloudinary.models.CloudinaryField(max_length=255)),
                ('phone', models.CharField(default='999999999', max_length=20, null=True)),
                ('diachi', models.CharField(default='TP HCM', max_length=255, null=True)),
                ('ngaysinh', models.DateField(default='2003-01-01', null=True)),
                ('gioitinh', models.BooleanField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HoiDong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Hoi Dong',
                'verbose_name_plural': 'Hoi Dong',
            },
        ),
        migrations.CreateModel(
            name='Khoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ten_khoa', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Khoa',
                'verbose_name_plural': 'Khoa',
            },
        ),
        migrations.CreateModel(
            name='NienKhoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nam_batdau', models.DateField()),
                ('nam_ketthuc', models.DateField()),
            ],
            options={
                'verbose_name': 'Nien Khoa',
                'verbose_name_plural': 'Nien Khoa',
            },
        ),
        migrations.CreateModel(
            name='TieuChi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ten_tieuchi', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tieu Chi',
                'verbose_name_plural': 'Tieu Chi',
            },
        ),
        migrations.CreateModel(
            name='GiangVien',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('hocham', models.CharField(max_length=30)),
                ('khoa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kltn.khoa')),
            ],
            options={
                'verbose_name': 'Giang Vien',
                'verbose_name_plural': 'Giang Vien',
            },
            bases=('kltn.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GiaoVu',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('chucvu', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Giao Vu',
                'verbose_name_plural': 'Giao Vu',
            },
            bases=('kltn.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='KhoaLuan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ten_khoaluan', models.CharField(max_length=200)),
                ('mo_ta', models.TextField(null=True)),
                ('ngay_tao', models.DateTimeField(auto_now_add=True)),
                ('ngay_capnhat', models.DateTimeField(auto_now=True)),
                ('hoidong', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='khoaluan_hoidong', to='kltn.hoidong')),
                ('nienkhoa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kltn.nienkhoa')),
                ('giangvien', models.ManyToManyField(related_name='khoaluan_giangvien', to='kltn.giangvien')),
                ('giaovu', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='kltn.giaovu')),
            ],
            options={
                'verbose_name': 'Khoa Luan',
                'verbose_name_plural': 'Khoa Luan',
            },
        ),
        migrations.CreateModel(
            name='Nganh',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ten_nganh', models.CharField(max_length=100, unique=True)),
                ('khoa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kltn.khoa')),
            ],
            options={
                'verbose_name': 'Nganh',
                'verbose_name_plural': 'Nganh',
            },
        ),
        migrations.AddField(
            model_name='hoidong',
            name='chutich',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hoidong_chutichvien', to='kltn.giangvien'),
        ),
        migrations.AddField(
            model_name='hoidong',
            name='giangvien',
            field=models.ManyToManyField(related_name='hoidong_giangvien', to='kltn.giangvien'),
        ),
        migrations.AddField(
            model_name='hoidong',
            name='phanbien',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hoidong_phanbien', to='kltn.giangvien'),
        ),
        migrations.AddField(
            model_name='hoidong',
            name='thuky',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hoidong_thuky', to='kltn.giangvien'),
        ),
        migrations.CreateModel(
            name='Diem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sodiem', models.IntegerField()),
                ('nhanxet', models.TextField(null=True)),
                ('khoaluan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kltn.khoaluan')),
                ('tieuchi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kltn.tieuchi')),
                ('giangvien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kltn.giangvien')),
            ],
            options={
                'verbose_name': 'Diem',
                'verbose_name_plural': 'Diem',
            },
        ),
        migrations.CreateModel(
            name='SinhVien',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('khoaluan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sinhvien_khoaluan', to='kltn.khoaluan')),
                ('nganh', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kltn.nganh')),
                ('nienkhoa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kltn.nienkhoa')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('kltn.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
